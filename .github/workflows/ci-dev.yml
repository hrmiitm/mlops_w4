name: CI Pipeline - Dev Branch

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  test-and-train:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure DVC remote
        run: |
          dvc remote modify myremote credentialpath /tmp/gcp-key.json || true
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json

      - name: Pull data and model from DVC
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/gcp-key.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json
          dvc pull || echo "No remote data to pull, continuing..."

      - name: Run data validation tests
        run: |
          pytest tests/test_data_validation.py -v --tb=short

      - name: Train model
        run: |
          python src/train.py

      - name: Run evaluation tests
        run: |
          pytest tests/test_eval.py -v --tb=short

      - name: Evaluate model
        run: |
          python src/evaluate.py

      - name: Setup CML
        uses: iterative/setup-cml@v2

      - name: Generate CML Report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "# ðŸ”¬ Model Evaluation Report - Dev Branch" > report.md
          echo "" >> report.md
          echo "## ðŸ“Š Model Performance Metrics" >> report.md
          echo "" >> report.md
          
          if [ -f models/metrics.json ]; then
            echo "### Training Metrics" >> report.md
            echo "\`\`\`json" >> report.md
            cat models/metrics.json >> report.md
            echo "\`\`\`" >> report.md
            echo "" >> report.md
          fi
          
          if [ -f models/evaluation_report.json ]; then
            echo "### Evaluation Metrics" >> report.md
            echo "\`\`\`json" >> report.md
            cat models/evaluation_report.json >> report.md
            echo "\`\`\`" >> report.md
            echo "" >> report.md
          fi
          
          echo "## âœ… Test Results" >> report.md
          echo "All tests passed successfully!" >> report.md
          echo "" >> report.md
          echo "**Branch:** \`dev\`" >> report.md
          echo "**Commit:** \`${{ github.sha }}\`" >> report.md
          echo "**Triggered by:** @${{ github.actor }}" >> report.md
          
          cml comment create report.md

      - name: Upload model artifacts
        uses: actions/upload-artifact@v3
        with:
          name: model-artifacts-dev
          path: |
            models/
            !models/.gitkeep

